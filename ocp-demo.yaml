apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-deployment
  namespace: ocp-demo
spec:
  serviceAccountName: demo-nube
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      initContainers:
        - name: git-clone
          image: registry.redhat.io/ubi9/ubi:latest  # Usando la imagen base UBI
          command: ["/bin/bash", "-c"]
          args:
            - wget https://github.com/francomdza18/ocp-demo/archive/refs/heads/main.tar.gz -O /mnt/repo.tar.gz && \
              tar -xzvf /mnt/repo.tar.gz -C /mnt/ && \
              cp -r /mnt/ocp-demo-main/* /mnt/apache-content/
          volumeMounts:
            - name: apache-content
              mountPath: /mnt/apache-content
            - name: repo
              mountPath: /mnt/repo
      containers:
        - name: apache
          image: registry.redhat.io/ubi9/httpd-24:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: apache-content
              mountPath: /var/www/html  # Aquí montamos el volumen donde Apache servirá los archivos
      volumes:
        - name: apache-content
          emptyDir: {}  # Usamos un volumen temporal para copiar el contenido
        - name: repo
          emptyDir: {}  # Volumen temporal para almacenar el repo clonado 
---
apiVersion: v1
kind: Service
metadata:
  name: demo-service
  namespace: ocp-demo
spec:
  selector:
    app: apache
  ports:
    - port: 80
      targetPort: 8080
  type: ClusterIP

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: demo-route
  namespace: ocp-demo
spec:
  path: /index.html
  to:
    kind: Service
    name: demo-service
  port:
    targetPort: 8080
