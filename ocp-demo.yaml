apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deployment
  namespace: ocp-demo
spec:
  serviceAccountName: demo-nube
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      initContainers:
        - name: git-clone
          image: alpine:latest  # Imagen liviana de Alpine para el contenedor que va a clonar el repo
          command: ["/bin/sh", "-c"]
          args:
            - apk add --no-cache git && \
              git clone https://github.com/tu_usuario/tu_repositorio.git /git-repo && \
              cp -r /git-repo/* /mnt/apache-content/
          volumeMounts:
            - name: apache-content
              mountPath: /mnt/apache-content
      containers:
        - name: apache
          image: registry.redhat.io/ubi9/httpd-24:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: apache-content
              mountPath: /usr/local/apache2/htdocs  # Ruta donde Apache sirve el contenido
            - name: index-html-config
              mountPath: /usr/local/apache2/htdocs/index.html  # Montaje espec√≠fico del archivo index.html desde el ConfigMap
              subPath: index.html
      volumes:
        - name: apache-content
          emptyDir: {}
        - name: index-html-config
          configMap:
            name: apache-index-config  # Nombre del ConfigMap con el index.html
          
---
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: ocp-demo
spec:
  selector:
    app: apache
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: apache-route
  namespace: ocp-demo
spec:
  to:
    kind: Service
    name: apache-service
  port:
    targetPort: 8080
